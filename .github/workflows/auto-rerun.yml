name: Auto-rerun on hosted runner allocation failure

on:
  workflow_run:
    workflows: ["Daily Myanmar News Digest"] # ← daily.yml の name と一致させる
    types: [completed]

permissions:
  actions: write # rerun API 用
  contents: read

jobs:
  rerun-if-runner-flaked:
    # 無限ループ防止（最大2回まで）
    # スケジュール実行だけ対象（不要なら外す）
    if: >
      github.event.workflow_run.conclusion == 'failure' &&
      github.event.workflow_run.run_attempt < 3 && 
      github.event.workflow_run.event == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Decide if this is a runner allocation failure
        id: decide
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = context.payload.workflow_run.id;

            // 失敗ランの job 一覧を取得
            const { data } = await github.request(
              'GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs',
              { owner, repo, run_id, per_page: 100 }
            );
            const jobs = data.jobs ?? [];

            // 1) どの job も開始されていない（= ランナー未取得の典型）
            const noneStarted = jobs.length === 0 ||
              jobs.every(j => !j.started_at && !j.runner_name);

            // 2) 既知のインフラ系メッセージを検出（保険）
            const infraPattern = /(was not acquired by Runner)|(not acquired by Runner of type hosted)|(Internal server error)|(timed out waiting for runner)/i;
            const msgBlob = jobs.map(j =>
              (j.failure_message || '') + ' ' +
              (j.steps || []).map(s => (s.name || '') + ' ' + (s.outcome || s.conclusion || '')).join(' ')
            ).join('\n');
            const infraLike = infraPattern.test(msgBlob);

            core.notice(`jobs=${jobs.length} noneStarted=${noneStarted} infraLike=${infraLike}`);
            core.setOutput('should_rerun', (noneStarted || infraLike) ? 'true' : 'false');

      - name: Re-run the failed workflow
        if: steps.decide.outputs.should_rerun == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = context.payload.workflow_run.id;
            await github.request(
              'POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun',
              { owner, repo, run_id }
            );
            core.notice(`Triggered rerun for run_id=${run_id}`);
